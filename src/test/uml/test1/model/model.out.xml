



modeltype uml uses "http://www.eclipse.org/uml2/5.0.0/UML";
modeltype umlPrimitiveTypes uses "http://www.eclipse.org/uml2/5.0.0/UML";



transformation net_samsarasoftware_encuestas_stacks(
	
	inout file : uml
	, in umlPrimitiveTypesFile:umlPrimitiveTypes
	
	,in standardProfileFile : uml 

	,in userInterfaceProfileFile : uml 

	,in transactionProfileProfileFile : uml 

	,in databaseProfileFile : uml 

	,in httpProfileFile : uml 

	
	
);


property allModels:Collection(uml::Model)=file.objects()->select(e | e.oclIsTypeOf(uml::Model))->any(true).oclAsType(Model).allOwnedElements()->collect(e | e.oclAsType(Element).getRelationships())->collect( e | e.relatedElement)->collect(e | e.getModel())->asSet();


main(){
	file.objects()->select(e | e.oclIsTypeOf(uml::Model))->forEach(__model){
		var model:uml::Model;
		model:=__model.oclAsType(Model);
		
		
		
	var standardProfile:=standardProfileFile.objects()->select(e | e.oclIsTypeOf(uml::Profile))->any(true).oclAsType(uml::Profile);
	if(not(model.getAppliedProfiles()->includes(standardProfile))){
		model.applyProfile(standardProfile);
	};

	
	var userInterfaceProfile:=userInterfaceProfileFile.objects()->select(e | e.oclIsTypeOf(uml::Profile))->any(true).oclAsType(uml::Profile);
	if(not(model.getAppliedProfiles()->includes(userInterfaceProfile))){
		model.applyProfile(userInterfaceProfile);
	};

	
	var transactionProfileProfile:=transactionProfileProfileFile.objects()->select(e | e.oclIsTypeOf(uml::Profile))->any(true).oclAsType(uml::Profile);
	if(not(model.getAppliedProfiles()->includes(transactionProfileProfile))){
		model.applyProfile(transactionProfileProfile);
	};

	
	var databaseProfile:=databaseProfileFile.objects()->select(e | e.oclIsTypeOf(uml::Profile))->any(true).oclAsType(uml::Profile);
	if(not(model.getAppliedProfiles()->includes(databaseProfile))){
		model.applyProfile(databaseProfile);
	};

	
	var httpProfile:=httpProfileFile.objects()->select(e | e.oclIsTypeOf(uml::Profile))->any(true).oclAsType(uml::Profile);
	if(not(model.getAppliedProfiles()->includes(httpProfile))){
		model.applyProfile(httpProfile);
	};

	
		
		
		model.map net_samsarasoftware_encuestas_stacks(model);
	};
};

/** BEGIN Utility method used in the generated script **/

mapping Element::setStereotypeByQualifiedName(qualifiedStereotypeName : String)  {
	var st:=self.getApplicableStereotype(qualifiedStereotypeName);
	self.applyStereotype(st);
}

mapping Element::setTaggedValueByStereotypeQualifiedName(qualifiedStereotypeName : String, qualifiedTaggedValueName : String, value : OclAny)  {
	var st:=self.getApplicableStereotype(qualifiedStereotypeName);
	self.setValue(st, qualifiedTaggedValueName, value);
}

mapping Element::setTaggedValueByStereotypeQualifiedName(qualifiedStereotypeName : String, qualifiedTaggedValueName : String, value : Collection(String))  {
	var st:=self.getApplicableStereotype(qualifiedStereotypeName);
	Sequence{0..value->size()-1}->forEach(i){
		self.setValue(st, qualifiedTaggedValueName+'['+i.toString()+']', value->asSequence()->at(i+1));
	}
}

query  getStereotype (elem : Element, qualifiedName : String) : Stereotype { 
	elem.getAppliedStereotypes()->select(s | 
		getStereotypeHierarchy(s.oclAsType(Stereotype))
		->exists(sh | 
			sh.oclAsType(Stereotype).qualifiedName=qualifiedName
		)
	)->asSequence()->at(1).oclAsType(Stereotype)
}
query getStereotypeHierarchy(st : Stereotype) : Sequence(Stereotype) { 
	if(st.general->size()>0) then
		st.general->select(u | u.oclIsTypeOf(Stereotype))->collect(u | getStereotypeHierarchy(u.oclAsType(Stereotype)))->asSequence()->append(st)
	else
		Sequence{st}
	endif
}
/** END Utility method used in the generated script **/

/** BEGIN : Reference-resolvers **/
	
			
mapping Component(n : String) : uml::Component{
	name:=n;
};
	
				
mapping Package(n : String) : uml::Package{
	name:=n;
};
	
					
mapping UseCase(n : String) : uml::UseCase{
	name:=n;
};
	
							
mapping ExtensionPoint(n : String) : uml::ExtensionPoint{
	name:=n;
};
	
						
mapping Include(n : String) : uml::Include{
	name:=n;
};
	
				
mapping Actor(n : String) : uml::Actor{
	name:=n;
};
	
						
mapping Class(n : String) : uml::Class{
	name:=n;
};
	
							
mapping Property(n : String) : uml::Property{
	name:=n;
};
	
						
mapping Association(n : String) : uml::Association{
	name:=n;
};
	
						
mapping Enumeration(n : String) : uml::Enumeration{
	name:=n;
};
	
							
mapping EnumerationLiteral(n : String) : uml::EnumerationLiteral{
	name:=n;
};
	
/** END: Reference-resolvers **/
	
/** BEGIN : User-defined additional methods **/
	
query getByName(name:String, model:uml::Model):uml::NamedElement{
	return model.allOwnedElements()->any(e | e.oclIsKindOf(NamedElement) and e.oclAsType(NamedElement).name=name).oclAsType(NamedElement);
}

/** END: User-defined additional methods **/

/** BEGIN : User-defined queries **/
	
query getCategoriaUsoEnumerationLiterals( model:uml::Model, elem:Sequence(uml::Element)): Set(EnumerationLiteral) {
	return model.allOwnedElements()->selectByType(uml::Enumeration)->any(e |e.name='CategoriaUso').ownedLiteral
}
query getEstadoUsoTecnologiaEnumerationLiterals(model:uml::Model,elem:Sequence(uml::Element)): Set(EnumerationLiteral) {
	return model.allOwnedElements()->selectByType(uml::Enumeration)->any(e |e.name='EstadoUsoTecnologia').ownedLiteral
}
query getUsoTecnologia(model:uml::Model,elem:Sequence(uml::Element)):UseCase{
	return model.allOwnedElements()->selectByType(uml::UseCase)->any(u |u.name='UsoTecnologia')
}
query getEncuestaPage(model:uml::Model,elem:Sequence(uml::Element)):UseCase{
	return model.allOwnedElements()->selectByType(uml::UseCase)->any(u |u.name='encuesta' and not(getStereotype(u,'userInterface::Page')).oclIsUndefined())
}
query getConsultarUsosTecnologiasTable(model:uml::Model,elem:Sequence(uml::Element)):UseCase{
	return model.allOwnedElements()->selectByType(uml::UseCase)->any(u |u.name='consultarUsosTecnologiasTable')
}
query getCrearUsoTecnologia( model:uml::Model,elem:Sequence(uml::Element)):UseCase{
	return model.allOwnedElements()->selectByType(uml::UseCase)->any(u |u.name='crearUsoTecnologia')
}
/** END : User-defined queries **/

mapping inout Package::net_samsarasoftware_encuestas_stacks(
inout model : uml::Model
) {

	// ignore as variable 
	// ignore all variable _aWtqgKV3EeqY2bYATC-WNg
	var	_QhfHMGDTEeeblagIm5IoLw:uml::UseCase;
	var	_G_IfMI4oEeqwwMiBBZ3a_Q:uml::UseCase;
	var	_rkqhkYvLEeqrmv6gTlHRfQ:uml::Include;
	var	_adZE8IuGEeqrmv6gTlHRfQ:uml::UseCase;
	var	_0kR9IJFLEeqjd6v_Kv6z8A:uml::UseCase;
	var	__b_88I4oEeqwwMiBBZ3a_Q:uml::Extend;
	var	_7EcegJFLEeqjd6v_Kv6z8A:uml::Include;
	var	__ei_AIuGEeqrmv6gTlHRfQ:uml::Include;
	var	_i4oBoKtFEee5koFaFP8Emg:uml::UseCase;
	var	_sf1NAJRVEeqjd6v_Kv6z8A:uml::Include;
	var	_88Qb8It9Eeqrmv6gTlHRfQ:uml::UseCase;
	var	_1pqlgKkmEeeFsZIY_norpA:uml::UseCase;
	var	_DRNb8I4oEeqwwMiBBZ3a_Q:uml::UseCase;
	var	_8oowAI4oEeqwwMiBBZ3a_Q:uml::Generalization;
	var	__b_kAI4oEeqwwMiBBZ3a_Q:uml::ExtensionPoint;
	var	_0v2ewIvLEeqrmv6gTlHRfQ:uml::Include;
	var	_IA6sUI4oEeqwwMiBBZ3a_Q:uml::UseCase;
	var	_8J4XcI4oEeqwwMiBBZ3a_Q:uml::Generalization;
	var	_rkqhl4vLEeqrmv6gTlHRfQ:uml::Include;
	var	_vuzlQJRnEeqjd6v_Kv6z8A:uml::Include;
	var	stacks_subsystem_implementation:uml::Component;
	var	stacks_entities:uml::Component;
	var	_8PIo4IvNEeqrmv6gTlHRfQ:uml::Package;
	var	_AJ0VwIvOEeqrmv6gTlHRfQ:uml::Class;
	var	_Y5pkU6kGEeeTDYLjCgvo9A:uml::Property;
	var	_jib_UKm_EeeroeCs7kyiMw:uml::Property;
	var	_nQ83cKm_EeeroeCs7kyiMw:uml::Property;
	var	_qo5qsKm_EeeroeCs7kyiMw:uml::LiteralInteger;
	var	_qo9VEKm_EeeroeCs7kyiMw:uml::LiteralUnlimitedNatural;
	var	_yvrFsK5tEeeWMOvyuZta_Q:uml::Property;
	var	_6w_QwK5tEeeWMOvyuZta_Q:uml::LiteralInteger;
	var	_6xBtAK5tEeeWMOvyuZta_Q:uml::LiteralUnlimitedNatural;
	var	_0oWekK5tEeeWMOvyuZta_Q:uml::Property;
	var	_6cr0sK5tEeeWMOvyuZta_Q:uml::LiteralInteger;
	var	_6ctC0K5tEeeWMOvyuZta_Q:uml::LiteralUnlimitedNatural;
	var	_1r5mQK5tEeeWMOvyuZta_Q:uml::Property;
	var	_6JdWsK5tEeeWMOvyuZta_Q:uml::LiteralInteger;
	var	_6JfL4K5tEeeWMOvyuZta_Q:uml::LiteralUnlimitedNatural;
	var	_2f_HgK5tEeeWMOvyuZta_Q:uml::Property;
	var	_5yoyIK5tEeeWMOvyuZta_Q:uml::LiteralInteger;
	var	_5yqAQK5tEeeWMOvyuZta_Q:uml::LiteralUnlimitedNatural;
	var	_39NvUK5yEeeWMOvyuZta_Q:uml::Property;
	var	_jjvG0LMqEee7_8opj0p05Q:uml::Property;
	var	_1cMrMLPwEeeps5lssdoO4g:uml::LiteralInteger;
	var	_1caGkLPwEeeps5lssdoO4g:uml::LiteralUnlimitedNatural;
	var	_ACHe0LPiEeeps5lssdoO4g:uml::Property;
	var	_10_XkLPwEeeps5lssdoO4g:uml::LiteralInteger;
	var	_10_lsLPwEeeps5lssdoO4g:uml::LiteralUnlimitedNatural;
	var	_D9fYkKD_EeqY2bYATC_WNg:uml::Property;
	var	_GXofwKD_EeqY2bYATC_WNg:uml::LiteralInteger;
	var	_GXy30KD_EeqY2bYATC_WNg:uml::LiteralUnlimitedNatural;
	var	_A1vnoIvOEeqrmv6gTlHRfQ:uml::Class;
	var	_Fu1dg4vOEeqrmv6gTlHRfQ:uml::Property;
	var	_OZ03sIvOEeqrmv6gTlHRfQ:uml::LiteralInteger;
	var	_OZ3T8IvOEeqrmv6gTlHRfQ:uml::LiteralUnlimitedNatural;
	var	_uPhogIvPEeqrmv6gTlHRfQ:uml::Property;
	var	_uPhogYvPEeqrmv6gTlHRfQ:uml::LiteralInteger;
	var	_uPhogovPEeqrmv6gTlHRfQ:uml::LiteralUnlimitedNatural;
	var	_uPkEwIvPEeqrmv6gTlHRfQ:uml::Property;
	var	_Duad4IvOEeqrmv6gTlHRfQ:uml::Class;
	var	_Fu2EkIvOEeqrmv6gTlHRfQ:uml::Property;
	var	_JjhQEIvOEeqrmv6gTlHRfQ:uml::LiteralInteger;
	var	_JjjsUIvOEeqrmv6gTlHRfQ:uml::LiteralUnlimitedNatural;
	var	_wSMq4IvPEeqrmv6gTlHRfQ:uml::Property;
	var	_k_P74oxHEeqrmv6gTlHRfQ:uml::Property;
	var	_Nm9P44xIEeqrmv6gTlHRfQ:uml::Property;
	var	_EwtWA4xKEeqrmv6gTlHRfQ:uml::Property;
	var	_FOL8MIxKEeqrmv6gTlHRfQ:uml::LiteralInteger;
	var	_FOO_gIxKEeqrmv6gTlHRfQ:uml::LiteralUnlimitedNatural;
	var	_kZYnYoxfEeqrmv6gTlHRfQ:uml::Property;
	var	_kyTdsIxfEeqrmv6gTlHRfQ:uml::LiteralInteger;
	var	_kyWhAIxfEeqrmv6gTlHRfQ:uml::LiteralUnlimitedNatural;
	var	_5qYkwI9dEeqwwMiBBZ3a_Q:uml::Property;
	var	_qOmMIJUDEeqjd6v_Kv6z8A:uml::LiteralInteger;
	var	_qOqdkJUDEeqjd6v_Kv6z8A:uml::LiteralUnlimitedNatural;
	var	_FYBgAIvOEeqrmv6gTlHRfQ:uml::Association;
	var	_QCJhMKGXEeqY2bYATC_WNg:uml::Generalization;
	var	_FYHmoIvOEeqrmv6gTlHRfQ:uml::Property;
	var	_GtvVwIvOEeqrmv6gTlHRfQ:uml::LiteralInteger;
	var	_GtznMIvOEeqrmv6gTlHRfQ:uml::LiteralUnlimitedNatural;
	var	_FYINsIvOEeqrmv6gTlHRfQ:uml::Property;
	var	_Fu1dgIvOEeqrmv6gTlHRfQ:uml::Association;
	var	_XRYCAIvgEeqrmv6gTlHRfQ:uml::Enumeration;
	var	_XroVEIvgEeqrmv6gTlHRfQ:uml::EnumerationLiteral;
	var	_Yi1C0IvgEeqrmv6gTlHRfQ:uml::EnumerationLiteral;
	var	_ZihfcIxHEeqrmv6gTlHRfQ:uml::Enumeration;
	var	_b_3mEIxHEeqrmv6gTlHRfQ:uml::EnumerationLiteral;
	var	_eF15oIxHEeqrmv6gTlHRfQ:uml::EnumerationLiteral;
	var	_gidtEIxHEeqrmv6gTlHRfQ:uml::EnumerationLiteral;
	var	_iozugIxHEeqrmv6gTlHRfQ:uml::EnumerationLiteral;
	var	_Hc22II9eEeqwwMiBBZ3a_Q:uml::EnumerationLiteral;
	var	_LT71YI9eEeqwwMiBBZ3a_Q:uml::EnumerationLiteral;
	var	_k_PU0IxHEeqrmv6gTlHRfQ:uml::Association;
	var	_k_P744xHEeqrmv6gTlHRfQ:uml::Property;
	var	_HN7xMI4dEeqwwMiBBZ3a_Q:uml::LiteralInteger;
	var	_HOoUwI4dEeqwwMiBBZ3a_Q:uml::LiteralUnlimitedNatural;
	var	_pdSTAIxHEeqrmv6gTlHRfQ:uml::Enumeration;
	var	_w7XOIIxHEeqrmv6gTlHRfQ:uml::EnumerationLiteral;
	var	_xp_1wIxHEeqrmv6gTlHRfQ:uml::EnumerationLiteral;
	var	_zA6lYIxHEeqrmv6gTlHRfQ:uml::EnumerationLiteral;
	var	_zu9XIIxHEeqrmv6gTlHRfQ:uml::EnumerationLiteral;
	var	_Nm9P4IxIEeqrmv6gTlHRfQ:uml::Association;
	var	_Nm9P5IxIEeqrmv6gTlHRfQ:uml::Property;
	var	_IElFUI4dEeqwwMiBBZ3a_Q:uml::LiteralInteger;
	var	_IEm6gI4dEeqwwMiBBZ3a_Q:uml::LiteralUnlimitedNatural;
	var	_EwtWAIxKEeqrmv6gTlHRfQ:uml::Association;
	var	_EwtWBIxKEeqrmv6gTlHRfQ:uml::Property;
	var	_Hu0QsI4dEeqwwMiBBZ3a_Q:uml::LiteralInteger;
	var	_Hu3UAI4dEeqwwMiBBZ3a_Q:uml::LiteralUnlimitedNatural;
	var	__yDUUIxLEeqrmv6gTlHRfQ:uml::Enumeration;
	var	_Ad5yIIxMEeqrmv6gTlHRfQ:uml::EnumerationLiteral;
	var	_RMpFsIxfEeqrmv6gTlHRfQ:uml::EnumerationLiteral;
	var	_TO_X8IxfEeqrmv6gTlHRfQ:uml::EnumerationLiteral;
	var	_VmQKQIxfEeqrmv6gTlHRfQ:uml::EnumerationLiteral;
	var	_aVm1UIxfEeqrmv6gTlHRfQ:uml::EnumerationLiteral;
	var	_hl8PYIxfEeqrmv6gTlHRfQ:uml::EnumerationLiteral;
	var	_kZYAUIxfEeqrmv6gTlHRfQ:uml::Association;
	var	_kZYnY4xfEeqrmv6gTlHRfQ:uml::Property;
	var	_Ik15wI4dEeqwwMiBBZ3a_Q:uml::LiteralInteger;
	var	_Ilc9wI4dEeqwwMiBBZ3a_Q:uml::LiteralUnlimitedNatural;
	var	_5qEbsI9dEeqwwMiBBZ3a_Q:uml::Association;
	var	_5qZL0I9dEeqwwMiBBZ3a_Q:uml::Property;
	var	_7DcpcI9dEeqwwMiBBZ3a_Q:uml::LiteralInteger;
	var	_7Dg64I9dEeqwwMiBBZ3a_Q:uml::LiteralUnlimitedNatural;
	var	stacks_external_classes:uml::Component;
	var	stacks_utils:uml::Package;
	var	stacks_TimeDataType:uml::Class;
	var	stacks_TimestampDataType:uml::Class;
	var	stacks_DateDataType:uml::Class;
	var	stacks_BlobDataType:uml::Class;
	var	stacks_ClobDataType:uml::Class;
	var	stacks_unsupported:uml::Package;
	var	stacks_ARRAY:uml::Class;
	var	stacks_BINARY:uml::Class;
	var	stacks_DISTINCT:uml::Class;
	var	stacks_LONGVARBINARY:uml::Class;
	var	stacks_NCLOB:uml::Class;
	var	stacks_OTHER:uml::Class;
	var	stacks_REF:uml::Class;
	var	stacks_ROWID:uml::Class;
	var	stacks_TINYINT:uml::Class;
	var	stacks_VARBINARY:uml::Class;



		//qvtoTemplate _G_IfMI4oEeqwwMiBBZ3a-Q
		getEstadoUsoTecnologiaEnumerationLiterals(model,null)->forEach(__elem1){
		getCategoriaUsoEnumerationLiterals(model,null)->forEach(__elem2){
						_G_IfMI4oEeqwwMiBBZ3a_Q :=null;
						_G_IfMI4oEeqwwMiBBZ3a_Q := map UseCase('net.samsarasoftware.encuestas.stacks_Subsystem Specification_front_encuesta_Nuevo uso tecnologia '+__elem1.name+' '+__elem2.name+' dialog_0');
							_rkqhkYvLEeqrmv6gTlHRfQ :=null;
							_IA6sUI4oEeqwwMiBBZ3a_Q :=null;
							_IA6sUI4oEeqwwMiBBZ3a_Q := map UseCase('net.samsarasoftware.encuestas.stacks_Subsystem Specification_back_UsoTecnologia_'+('crearUsoTecnologia'+__elem1.name+__elem2.name)+'_0');

						getEncuestaPage(model,null).ownedUseCase+=object _G_IfMI4oEeqwwMiBBZ3a_Q :uml::UseCase{
							name:= 'net.samsarasoftware.encuestas.stacks_Subsystem Specification_front_encuesta_Nuevo uso tecnologia '+__elem1.name+' '+__elem2.name+' dialog_0';
					
							include:=object _rkqhkYvLEeqrmv6gTlHRfQ :uml::Include{
								addition:= object _IA6sUI4oEeqwwMiBBZ3a_Q :uml::UseCase{};

							};
						};

						_G_IfMI4oEeqwwMiBBZ3a_Q.setStereotypeByQualifiedName('userInterface::Hidden');
		
		
						_G_IfMI4oEeqwwMiBBZ3a_Q.setStereotypeByQualifiedName('userInterface::Dialog');
		
		
		};
		};

		//qvtoDelete _G_IfMI4oEeqwwMiBBZ3a-Q
		getByName('Nuevo uso tecnologia \'+__elem1.name+\' \'+__elem2.name+\' dialog',model)->forEach(__elem1){
						__elem1.allOwnedElements()->collect(e | e.getStereotypeApplications())->union(__elem1.getStereotypeApplications())->forEach(__stereotype__){
							file.removeElement(__stereotype__);
						};
						file.removeElement(__elem1);
		};

		//qvtoTemplate _0kR9IJFLEeqjd6v-Kv6z8A
		getEstadoUsoTecnologiaEnumerationLiterals(model,null)->forEach(__elem1){
		getCategoriaUsoEnumerationLiterals(model,null)->forEach(__elem2){
						_0kR9IJFLEeqjd6v_Kv6z8A :=null;
						_0kR9IJFLEeqjd6v_Kv6z8A := map UseCase('net.samsarasoftware.encuestas.stacks_Subsystem Specification_front_encuesta_Nuevo uso tecnologia '+__elem1.name+' '+__elem2.name+'_0');
							__b_88I4oEeqwwMiBBZ3a_Q :=null;
							_DRNb8I4oEeqwwMiBBZ3a_Q :=null;
							_DRNb8I4oEeqwwMiBBZ3a_Q := map UseCase('net.samsarasoftware.encuestas.stacks_Subsystem Specification_back_UsoTecnologia_'+('consultarUsosTecnologias'+__elem1.name+__elem2.name)+'_0');
							__b_kAI4oEeqwwMiBBZ3a_Q :=null;
							__b_kAI4oEeqwwMiBBZ3a_Q := map ExtensionPoint('net.samsarasoftware.encuestas.stacks_Subsystem Specification_back_UsoTecnologia_'+('consultarUsosTecnologias'+__elem1.name+__elem2.name)+'_ExtensionPoint1_6');
							_7EcegJFLEeqjd6v_Kv6z8A :=null;
							_G_IfMI4oEeqwwMiBBZ3a_Q :=null;
							_G_IfMI4oEeqwwMiBBZ3a_Q := map UseCase('net.samsarasoftware.encuestas.stacks_Subsystem Specification_front_encuesta_Nuevo uso tecnologia '+__elem1.name+' '+__elem2.name+' dialog_0');

						getEncuestaPage(model,null).ownedUseCase+=object _0kR9IJFLEeqjd6v_Kv6z8A :uml::UseCase{
							name:= 'net.samsarasoftware.encuestas.stacks_Subsystem Specification_front_encuesta_Nuevo uso tecnologia '+__elem1.name+' '+__elem2.name+'_0';
					
							extend:=object __b_88I4oEeqwwMiBBZ3a_Q :uml::Extend{
								extendedCase:= object _DRNb8I4oEeqwwMiBBZ3a_Q :uml::UseCase{};

								extensionLocation:= object __b_kAI4oEeqwwMiBBZ3a_Q :uml::ExtensionPoint{};

							};
							include:=object _7EcegJFLEeqjd6v_Kv6z8A :uml::Include{
								addition:= object _G_IfMI4oEeqwwMiBBZ3a_Q :uml::UseCase{};

							};
						};

						_0kR9IJFLEeqjd6v_Kv6z8A.setStereotypeByQualifiedName('userInterface::InterfaceAction');
		
		
						_7EcegJFLEeqjd6v_Kv6z8A.setStereotypeByQualifiedName('userInterface::Show');
		
		
		};
		};

		//qvtoDelete _0kR9IJFLEeqjd6v-Kv6z8A
		getByName('Nuevo uso tecnologia \'+__elem1.name+\' \'+__elem2.name+\'',model)->forEach(__elem1){
						__elem1.allOwnedElements()->collect(e | e.getStereotypeApplications())->union(__elem1.getStereotypeApplications())->forEach(__stereotype__){
							file.removeElement(__stereotype__);
						};
						file.removeElement(__elem1);
		};

		//qvtoTemplate _-ei_AIuGEeqrmv6gTlHRfQ
		getEstadoUsoTecnologiaEnumerationLiterals(model,null)->forEach(__elem1){
		getCategoriaUsoEnumerationLiterals(model,null)->forEach(__elem2){
						__ei_AIuGEeqrmv6gTlHRfQ :=null;
						__ei_AIuGEeqrmv6gTlHRfQ := map Include('net.samsarasoftware.encuestas.stacks_Subsystem Specification_front_encuesta_includeTemplate '+__elem1.name+__elem2.name+'_0');
						_DRNb8I4oEeqwwMiBBZ3a_Q :=null;
						_DRNb8I4oEeqwwMiBBZ3a_Q := map UseCase('net.samsarasoftware.encuestas.stacks_Subsystem Specification_back_UsoTecnologia_'+('consultarUsosTecnologias'+__elem1.name+__elem2.name)+'_0');

						getEncuestaPage(model,null).include+=object __ei_AIuGEeqrmv6gTlHRfQ :uml::Include{
							name:= 'net.samsarasoftware.encuestas.stacks_Subsystem Specification_front_encuesta_includeTemplate '+__elem1.name+__elem2.name+'_0';
					
							addition:= object _DRNb8I4oEeqwwMiBBZ3a_Q :uml::UseCase{};

						};

		};
		};

		//qvtoDelete _-ei_AIuGEeqrmv6gTlHRfQ
		getByName('includeTemplate \'+__elem1.name+__elem2.name+\'',model)->forEach(__elem1){
						__elem1.allOwnedElements()->collect(e | e.getStereotypeApplications())->union(__elem1.getStereotypeApplications())->forEach(__stereotype__){
							file.removeElement(__stereotype__);
						};
						file.removeElement(__elem1);
		};

			//qvtoUpdate _i4oBoKtFEee5koFaFP8Emg
		getByName('crearEncuesta',model)->forEach(__elem1){

							__elem1.name:= 'crearEncuesta2';
					
/******************************
* - UseCase -
*	
* Attr:			extend                        (//Extend)                      ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			extensionPoint                (//ExtensionPoint)              ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			include                       (//Include)                     ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			subject                       (//Classifier)                  ,defaultValueLiteral=                              ,isDerived=                              
/******************************
* - BehavioredClassifier -
*	
* Attr:			classifierBehavior            (//Behavior)                    ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			interfaceRealization          (//InterfaceRealization)        ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			ownedBehavior                 (//Behavior)                    ,defaultValueLiteral=                              ,isDerived=                              
/******************************
* - Classifier -
*	
* Attr:			feature                       (//Feature)                     ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			attribute                     (//Property)                    ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			collaborationUse              (//CollaborationUse)            ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			general                       (//Classifier)                  ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			generalization                (//Generalization)              ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			powertypeExtent               (//GeneralizationSet)           ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			inheritedMember               (//NamedElement)                ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			isAbstract                    (//Boolean)                     ,defaultValueLiteral=false                         ,isDerived=                              
* Attr:			isFinalSpecialization         (//Boolean)                     ,defaultValueLiteral=false                         ,isDerived=                              
* Attr:			ownedUseCase                  (//UseCase)                     ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			useCase                       (//UseCase)                     ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			redefinedClassifier           (//Classifier)                  ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			representation                (//CollaborationUse)            ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			substitution                  (//Substitution)                ,defaultValueLiteral=                              ,isDerived=                              
* Dupl:			ownedTemplateSignature        (//TemplateSignature)           ,defaultValueLiteral=                              ,isDerived=                              
* Dupl:			templateParameter             (//TemplateParameter)           ,defaultValueLiteral=                              ,isDerived=                              
/******************************
* - Namespace -
*	
* Attr:			ownedRule                     (//Constraint)                  ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			elementImport                 (//ElementImport)               ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			packageImport                 (//PackageImport)               ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			ownedMember                   (//NamedElement)                ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			importedMember                (//PackageableElement)          ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			member                        (//NamedElement)                ,defaultValueLiteral=                              ,isDerived=true                          
/******************************
* - NamedElement -
*	
* Attr:			clientDependency              (//Dependency)                  ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			name                          (//String)                      ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			nameExpression                (//StringExpression)            ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			namespace                     (//Namespace)                   ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			qualifiedName                 (//String)                      ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			visibility                    (//VisibilityKind)              ,defaultValueLiteral=                              ,isDerived=                              
/******************************
* - Element -
*	
* Attr:			ownedComment                  (//Comment)                     ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			ownedElement                  (//Element)                     ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			owner                         (//Element)                     ,defaultValueLiteral=                              ,isDerived=true                          
/******************************
* - RedefinableElement -
*	
* Attr:			isLeaf                        (//Boolean)                     ,defaultValueLiteral=false                         ,isDerived=                              
* Attr:			redefinedElement              (//RedefinableElement)          ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			redefinitionContext           (//Classifier)                  ,defaultValueLiteral=                              ,isDerived=true                          
/******************************
* - NamedElement -
*	
* Attr:			clientDependency              (//Dependency)                  ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			name                          (//String)                      ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			nameExpression                (//StringExpression)            ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			namespace                     (//Namespace)                   ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			qualifiedName                 (//String)                      ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			visibility                    (//VisibilityKind)              ,defaultValueLiteral=                              ,isDerived=                              
/******************************
* - Element -
*	
* Attr:			ownedComment                  (//Comment)                     ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			ownedElement                  (//Element)                     ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			owner                         (//Element)                     ,defaultValueLiteral=                              ,isDerived=true                          
/******************************
* - Type -
*	
* Attr:			package                       (//Package)                     ,defaultValueLiteral=                              ,isDerived=true                          
/******************************
* - PackageableElement -
*	
* Dupl:			visibility                    (//VisibilityKind)              ,defaultValueLiteral=public                        ,isDerived=                              
/******************************
* - NamedElement -
*	
* Attr:			clientDependency              (//Dependency)                  ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			name                          (//String)                      ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			nameExpression                (//StringExpression)            ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			namespace                     (//Namespace)                   ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			qualifiedName                 (//String)                      ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			visibility                    (//VisibilityKind)              ,defaultValueLiteral=                              ,isDerived=                              
/******************************
* - Element -
*	
* Attr:			ownedComment                  (//Comment)                     ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			ownedElement                  (//Element)                     ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			owner                         (//Element)                     ,defaultValueLiteral=                              ,isDerived=true                          
/******************************
* - ParameterableElement -
*	
* Attr:			owningTemplateParameter       (//TemplateParameter)           ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			templateParameter             (//TemplateParameter)           ,defaultValueLiteral=                              ,isDerived=                              
/******************************
* - Element -
*	
* Attr:			ownedComment                  (//Comment)                     ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			ownedElement                  (//Element)                     ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			owner                         (//Element)                     ,defaultValueLiteral=                              ,isDerived=true                          
/******************************
* - TemplateableElement -
*	
* Attr:			templateBinding               (//TemplateBinding)             ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			ownedTemplateSignature        (//TemplateSignature)           ,defaultValueLiteral=                              ,isDerived=                              
/******************************
* - Element -
*	
* Attr:			ownedComment                  (//Comment)                     ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			ownedElement                  (//Element)                     ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			owner                         (//Element)                     ,defaultValueLiteral=                              ,isDerived=true                          
						__elem1.isAbstract:=false;	
									__elem1.isFinalSpecialization:=false;	
									__elem1.isLeaf:=false;	
									__elem1.visibility:=uml::VisibilityKind::public;	
			
						__elem1.setStereotypeByQualifiedName('userInterface::Hidden');
		
		
						__elem1.setStereotypeByQualifiedName('transactionProfile::InsertOrUpdate');
		
		
						_sf1NAJRVEeqjd6v_Kv6z8A.setStereotypeByQualifiedName('userInterface::Update');
		
		
		};

		//qvtoTemplate _DRNb8I4oEeqwwMiBBZ3a-Q
		getEstadoUsoTecnologiaEnumerationLiterals(model,null)->forEach(__elem1){
		getCategoriaUsoEnumerationLiterals(model,null)->forEach(__elem2){
						_DRNb8I4oEeqwwMiBBZ3a_Q :=null;
						_DRNb8I4oEeqwwMiBBZ3a_Q := map UseCase('net.samsarasoftware.encuestas.stacks_Subsystem Specification_back_UsoTecnologia_'+('consultarUsosTecnologias'+__elem1.name+__elem2.name)+'_0');
							_8oowAI4oEeqwwMiBBZ3a_Q :=null;
							__b_kAI4oEeqwwMiBBZ3a_Q :=null;
							__b_kAI4oEeqwwMiBBZ3a_Q := map ExtensionPoint('net.samsarasoftware.encuestas.stacks_Subsystem Specification_back_UsoTecnologia_'+('consultarUsosTecnologias'+__elem1.name+__elem2.name)+'_ExtensionPoint1_6');
							_0v2ewIvLEeqrmv6gTlHRfQ :=null;
							_G_IfMI4oEeqwwMiBBZ3a_Q :=null;
							_G_IfMI4oEeqwwMiBBZ3a_Q := map UseCase('net.samsarasoftware.encuestas.stacks_Subsystem Specification_front_encuesta_Nuevo uso tecnologia '+__elem1.name+' '+__elem2.name+' dialog_0');

						getUsoTecnologia(model,null).ownedUseCase+=object _DRNb8I4oEeqwwMiBBZ3a_Q :uml::UseCase{
							name:= 'net.samsarasoftware.encuestas.stacks_Subsystem Specification_back_UsoTecnologia_'+('consultarUsosTecnologias'+__elem1.name+__elem2.name)+'_0';
					
							isAbstract:=true;	
			
							generalization:=object _8oowAI4oEeqwwMiBBZ3a_Q :uml::Generalization{
								general:= getConsultarUsosTecnologiasTable(model,Sequence{__elem2,__elem1});

							};
							extensionPoint:=object __b_kAI4oEeqwwMiBBZ3a_Q :uml::ExtensionPoint{
								name:= 'net.samsarasoftware.encuestas.stacks_Subsystem Specification_back_UsoTecnologia_'+('consultarUsosTecnologias'+__elem1.name+__elem2.name)+'_ExtensionPoint1_6';
					
							};
							include:=object _0v2ewIvLEeqrmv6gTlHRfQ :uml::Include{
								addition:= object _G_IfMI4oEeqwwMiBBZ3a_Q :uml::UseCase{};

							};
						};

						_DRNb8I4oEeqwwMiBBZ3a_Q.setStereotypeByQualifiedName('transactionProfile::Select');
		
		
						_DRNb8I4oEeqwwMiBBZ3a_Q.setStereotypeByQualifiedName('userInterface::SingleSelectTable');
		
		
		};
		};

		//qvtoDelete _DRNb8I4oEeqwwMiBBZ3a-Q
		getByName('\'+(\'consultarUsosTecnologias\'+__elem1.name+__elem2.name)+\'',model)->forEach(__elem1){
						__elem1.allOwnedElements()->collect(e | e.getStereotypeApplications())->union(__elem1.getStereotypeApplications())->forEach(__stereotype__){
							file.removeElement(__stereotype__);
						};
						file.removeElement(__elem1);
		};

		//qvtoTemplate _IA6sUI4oEeqwwMiBBZ3a-Q
		getEstadoUsoTecnologiaEnumerationLiterals(model,null)->forEach(__elem1){
		getCategoriaUsoEnumerationLiterals(model,null)->forEach(__elem2){
						_IA6sUI4oEeqwwMiBBZ3a_Q :=null;
						_IA6sUI4oEeqwwMiBBZ3a_Q := map UseCase('net.samsarasoftware.encuestas.stacks_Subsystem Specification_back_UsoTecnologia_'+('crearUsoTecnologia'+__elem1.name+__elem2.name)+'_0');
							_8J4XcI4oEeqwwMiBBZ3a_Q :=null;
							_rkqhl4vLEeqrmv6gTlHRfQ :=null;
							_G_IfMI4oEeqwwMiBBZ3a_Q :=null;
							_G_IfMI4oEeqwwMiBBZ3a_Q := map UseCase('net.samsarasoftware.encuestas.stacks_Subsystem Specification_front_encuesta_Nuevo uso tecnologia '+__elem1.name+' '+__elem2.name+' dialog_0');
							_vuzlQJRnEeqjd6v_Kv6z8A :=null;
							_DRNb8I4oEeqwwMiBBZ3a_Q :=null;
							_DRNb8I4oEeqwwMiBBZ3a_Q := map UseCase('net.samsarasoftware.encuestas.stacks_Subsystem Specification_back_UsoTecnologia_'+('consultarUsosTecnologias'+__elem1.name+__elem2.name)+'_0');

						getUsoTecnologia(model,null).ownedUseCase+=object _IA6sUI4oEeqwwMiBBZ3a_Q :uml::UseCase{
							name:= 'net.samsarasoftware.encuestas.stacks_Subsystem Specification_back_UsoTecnologia_'+('crearUsoTecnologia'+__elem1.name+__elem2.name)+'_0';
					
							generalization:=object _8J4XcI4oEeqwwMiBBZ3a_Q :uml::Generalization{
								general:= getCrearUsoTecnologia(model,Sequence{__elem2,__elem1});

							};
							include+=object _rkqhl4vLEeqrmv6gTlHRfQ :uml::Include{
								addition:= object _G_IfMI4oEeqwwMiBBZ3a_Q :uml::UseCase{};

							};
							include+=object _vuzlQJRnEeqjd6v_Kv6z8A :uml::Include{
								addition:= object _DRNb8I4oEeqwwMiBBZ3a_Q :uml::UseCase{};

							};
						};

						_IA6sUI4oEeqwwMiBBZ3a_Q.setStereotypeByQualifiedName('transactionProfile::Insert');
		
		
						_rkqhl4vLEeqrmv6gTlHRfQ.setStereotypeByQualifiedName('userInterface::Post');
		
		
						_rkqhl4vLEeqrmv6gTlHRfQ.setStereotypeByQualifiedName('userInterface::Hide');
		
		
						_vuzlQJRnEeqjd6v_Kv6z8A.setStereotypeByQualifiedName('userInterface::Post');
		
		
						_vuzlQJRnEeqjd6v_Kv6z8A.setStereotypeByQualifiedName('userInterface::Refresh');
		
		
		};
		};

		//qvtoDelete _IA6sUI4oEeqwwMiBBZ3a-Q
		getByName('\'+(\'crearUsoTecnologia\'+__elem1.name+__elem2.name)+\'',model)->forEach(__elem1){
						__elem1.allOwnedElements()->collect(e | e.getStereotypeApplications())->union(__elem1.getStereotypeApplications())->forEach(__stereotype__){
							file.removeElement(__stereotype__);
						};
						file.removeElement(__elem1);
		};

			//qvtoUpdate _D9fYkKD_EeqY2bYATC-WNg
		getByName('Attribute1',model).oclAsType(uml::Property)->forEach(__elem1){

								__elem1.name:= 'Attribute1';
					
								__elem1.isDerived:=true;	
			
								__elem1.type:=umlPrimitiveTypesFile.objects()->select(e | e.oclIsTypeOf(uml::Model))->any(true).oclAsType(Model).packagedElement->select(t | t.name="Boolean")->any(true).oclAsType(Type);
								__elem1.lowerValue:=object _GXofwKD_EeqY2bYATC_WNg :uml::LiteralInteger{
								};
								__elem1.upperValue:=object _GXy30KD_EeqY2bYATC_WNg :uml::LiteralUnlimitedNatural{
									value:=1;	
			
								};
/******************************
* - Property -
*	
* Attr:			datatype                      (//DataType)                    ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			interface                     (//Interface)                   ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			default                       (//String)                      ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			aggregation                   (//AggregationKind)             ,defaultValueLiteral=none                          ,isDerived=                              
* Attr:			associationEnd                (//Property)                    ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			qualifier                     (//Property)                    ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			class                         (//Class)                       ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			defaultValue                  (//ValueSpecification)          ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			isComposite                   (//Boolean)                     ,defaultValueLiteral=false                         ,isDerived=true                          
* Attr:			isDerived                     (//Boolean)                     ,defaultValueLiteral=false                         ,isDerived=                              
* Attr:			isDerivedUnion                (//Boolean)                     ,defaultValueLiteral=false                         ,isDerived=                              
* Attr:			isID                          (//Boolean)                     ,defaultValueLiteral=false                         ,isDerived=                              
* Attr:			opposite                      (//Property)                    ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			owningAssociation             (//Association)                 ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			redefinedProperty             (//Property)                    ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			subsettedProperty             (//Property)                    ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			association                   (//Association)                 ,defaultValueLiteral=                              ,isDerived=                              
* Dupl:			visibility                    (//VisibilityKind)              ,defaultValueLiteral=public                        ,isDerived=                              
/******************************
* - StructuralFeature -
*	
* Attr:			isReadOnly                    (//Boolean)                     ,defaultValueLiteral=false                         ,isDerived=                              
/******************************
* - Feature -
*	
* Attr:			featuringClassifier           (//Classifier)                  ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			isStatic                      (//Boolean)                     ,defaultValueLiteral=false                         ,isDerived=                              
/******************************
* - RedefinableElement -
*	
* Attr:			isLeaf                        (//Boolean)                     ,defaultValueLiteral=false                         ,isDerived=                              
* Attr:			redefinedElement              (//RedefinableElement)          ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			redefinitionContext           (//Classifier)                  ,defaultValueLiteral=                              ,isDerived=true                          
/******************************
* - NamedElement -
*	
* Attr:			clientDependency              (//Dependency)                  ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			name                          (//String)                      ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			nameExpression                (//StringExpression)            ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			namespace                     (//Namespace)                   ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			qualifiedName                 (//String)                      ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			visibility                    (//VisibilityKind)              ,defaultValueLiteral=                              ,isDerived=                              
/******************************
* - Element -
*	
* Attr:			ownedComment                  (//Comment)                     ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			ownedElement                  (//Element)                     ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			owner                         (//Element)                     ,defaultValueLiteral=                              ,isDerived=true                          
/******************************
* - TypedElement -
*	
* Attr:			type                          (//Type)                        ,defaultValueLiteral=                              ,isDerived=                              
/******************************
* - NamedElement -
*	
* Attr:			clientDependency              (//Dependency)                  ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			name                          (//String)                      ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			nameExpression                (//StringExpression)            ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			namespace                     (//Namespace)                   ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			qualifiedName                 (//String)                      ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			visibility                    (//VisibilityKind)              ,defaultValueLiteral=                              ,isDerived=                              
/******************************
* - Element -
*	
* Attr:			ownedComment                  (//Comment)                     ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			ownedElement                  (//Element)                     ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			owner                         (//Element)                     ,defaultValueLiteral=                              ,isDerived=true                          
/******************************
* - MultiplicityElement -
*	
* Attr:			isOrdered                     (//Boolean)                     ,defaultValueLiteral=false                         ,isDerived=                              
* Attr:			isUnique                      (//Boolean)                     ,defaultValueLiteral=true                          ,isDerived=                              
* Attr:			lower                         (//Integer)                     ,defaultValueLiteral=1                             ,isDerived=true                          
* Attr:			lowerValue                    (//ValueSpecification)          ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			upper                         (//UnlimitedNatural)            ,defaultValueLiteral=1                             ,isDerived=true                          
* Attr:			upperValue                    (//ValueSpecification)          ,defaultValueLiteral=                              ,isDerived=                              
/******************************
* - Element -
*	
* Attr:			ownedComment                  (//Comment)                     ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			ownedElement                  (//Element)                     ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			owner                         (//Element)                     ,defaultValueLiteral=                              ,isDerived=true                          
/******************************
* - ConnectableElement -
*	
* Attr:			end                           (//ConnectorEnd)                ,defaultValueLiteral=                              ,isDerived=true                          
* Dupl:			templateParameter             (//TemplateParameter)           ,defaultValueLiteral=                              ,isDerived=                              
/******************************
* - TypedElement -
*	
* Attr:			type                          (//Type)                        ,defaultValueLiteral=                              ,isDerived=                              
/******************************
* - NamedElement -
*	
* Attr:			clientDependency              (//Dependency)                  ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			name                          (//String)                      ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			nameExpression                (//StringExpression)            ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			namespace                     (//Namespace)                   ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			qualifiedName                 (//String)                      ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			visibility                    (//VisibilityKind)              ,defaultValueLiteral=                              ,isDerived=                              
/******************************
* - Element -
*	
* Attr:			ownedComment                  (//Comment)                     ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			ownedElement                  (//Element)                     ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			owner                         (//Element)                     ,defaultValueLiteral=                              ,isDerived=true                          
/******************************
* - ParameterableElement -
*	
* Attr:			owningTemplateParameter       (//TemplateParameter)           ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			templateParameter             (//TemplateParameter)           ,defaultValueLiteral=                              ,isDerived=                              
/******************************
* - Element -
*	
* Attr:			ownedComment                  (//Comment)                     ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			ownedElement                  (//Element)                     ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			owner                         (//Element)                     ,defaultValueLiteral=                              ,isDerived=true                          
/******************************
* - DeploymentTarget -
*	
* Attr:			deployedElement               (//PackageableElement)          ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			deployment                    (//Deployment)                  ,defaultValueLiteral=                              ,isDerived=                              
/******************************
* - NamedElement -
*	
* Attr:			clientDependency              (//Dependency)                  ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			name                          (//String)                      ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			nameExpression                (//StringExpression)            ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			namespace                     (//Namespace)                   ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			qualifiedName                 (//String)                      ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			visibility                    (//VisibilityKind)              ,defaultValueLiteral=                              ,isDerived=                              
/******************************
* - Element -
*	
* Attr:			ownedComment                  (//Comment)                     ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			ownedElement                  (//Element)                     ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			owner                         (//Element)                     ,defaultValueLiteral=                              ,isDerived=true                          
							__elem1.aggregation:=uml::AggregationKind::none;	
										__elem1.isDerivedUnion:=false;	
										__elem1.isID:=false;	
										__elem1.visibility:=uml::VisibilityKind::public;	
										__elem1.isReadOnly:=false;	
										__elem1.isStatic:=false;	
										__elem1.isLeaf:=false;	
										__elem1.isOrdered:=false;	
										__elem1.isUnique:=true;	
			
		};

			//qvtoUpdate _FYBgAIvOEeqrmv6gTlHRfQ
		getByName('A_usoTecnologia_encuesta',model)->forEach(__elem1){

							__elem1.name:= 'A_usoTecnologia_encuesta';
					
/******************************
* - Association -
*	
* Attr:			endType                       (//Type)                        ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			isDerived                     (//Boolean)                     ,defaultValueLiteral=false                         ,isDerived=                              
* Attr:			memberEnd                     (//Property)                    ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			ownedEnd                      (//Property)                    ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			navigableOwnedEnd             (//Property)                    ,defaultValueLiteral=                              ,isDerived=                              
/******************************
* - Classifier -
*	
* Attr:			feature                       (//Feature)                     ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			attribute                     (//Property)                    ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			collaborationUse              (//CollaborationUse)            ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			general                       (//Classifier)                  ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			generalization                (//Generalization)              ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			powertypeExtent               (//GeneralizationSet)           ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			inheritedMember               (//NamedElement)                ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			isAbstract                    (//Boolean)                     ,defaultValueLiteral=false                         ,isDerived=                              
* Attr:			isFinalSpecialization         (//Boolean)                     ,defaultValueLiteral=false                         ,isDerived=                              
* Attr:			ownedUseCase                  (//UseCase)                     ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			useCase                       (//UseCase)                     ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			redefinedClassifier           (//Classifier)                  ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			representation                (//CollaborationUse)            ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			substitution                  (//Substitution)                ,defaultValueLiteral=                              ,isDerived=                              
* Dupl:			ownedTemplateSignature        (//TemplateSignature)           ,defaultValueLiteral=                              ,isDerived=                              
* Dupl:			templateParameter             (//TemplateParameter)           ,defaultValueLiteral=                              ,isDerived=                              
/******************************
* - Namespace -
*	
* Attr:			ownedRule                     (//Constraint)                  ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			elementImport                 (//ElementImport)               ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			packageImport                 (//PackageImport)               ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			ownedMember                   (//NamedElement)                ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			importedMember                (//PackageableElement)          ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			member                        (//NamedElement)                ,defaultValueLiteral=                              ,isDerived=true                          
/******************************
* - NamedElement -
*	
* Attr:			clientDependency              (//Dependency)                  ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			name                          (//String)                      ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			nameExpression                (//StringExpression)            ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			namespace                     (//Namespace)                   ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			qualifiedName                 (//String)                      ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			visibility                    (//VisibilityKind)              ,defaultValueLiteral=                              ,isDerived=                              
/******************************
* - Element -
*	
* Attr:			ownedComment                  (//Comment)                     ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			ownedElement                  (//Element)                     ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			owner                         (//Element)                     ,defaultValueLiteral=                              ,isDerived=true                          
/******************************
* - RedefinableElement -
*	
* Attr:			isLeaf                        (//Boolean)                     ,defaultValueLiteral=false                         ,isDerived=                              
* Attr:			redefinedElement              (//RedefinableElement)          ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			redefinitionContext           (//Classifier)                  ,defaultValueLiteral=                              ,isDerived=true                          
/******************************
* - NamedElement -
*	
* Attr:			clientDependency              (//Dependency)                  ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			name                          (//String)                      ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			nameExpression                (//StringExpression)            ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			namespace                     (//Namespace)                   ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			qualifiedName                 (//String)                      ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			visibility                    (//VisibilityKind)              ,defaultValueLiteral=                              ,isDerived=                              
/******************************
* - Element -
*	
* Attr:			ownedComment                  (//Comment)                     ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			ownedElement                  (//Element)                     ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			owner                         (//Element)                     ,defaultValueLiteral=                              ,isDerived=true                          
/******************************
* - Type -
*	
* Attr:			package                       (//Package)                     ,defaultValueLiteral=                              ,isDerived=true                          
/******************************
* - PackageableElement -
*	
* Dupl:			visibility                    (//VisibilityKind)              ,defaultValueLiteral=public                        ,isDerived=                              
/******************************
* - NamedElement -
*	
* Attr:			clientDependency              (//Dependency)                  ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			name                          (//String)                      ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			nameExpression                (//StringExpression)            ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			namespace                     (//Namespace)                   ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			qualifiedName                 (//String)                      ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			visibility                    (//VisibilityKind)              ,defaultValueLiteral=                              ,isDerived=                              
/******************************
* - Element -
*	
* Attr:			ownedComment                  (//Comment)                     ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			ownedElement                  (//Element)                     ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			owner                         (//Element)                     ,defaultValueLiteral=                              ,isDerived=true                          
/******************************
* - ParameterableElement -
*	
* Attr:			owningTemplateParameter       (//TemplateParameter)           ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			templateParameter             (//TemplateParameter)           ,defaultValueLiteral=                              ,isDerived=                              
/******************************
* - Element -
*	
* Attr:			ownedComment                  (//Comment)                     ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			ownedElement                  (//Element)                     ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			owner                         (//Element)                     ,defaultValueLiteral=                              ,isDerived=true                          
/******************************
* - TemplateableElement -
*	
* Attr:			templateBinding               (//TemplateBinding)             ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			ownedTemplateSignature        (//TemplateSignature)           ,defaultValueLiteral=                              ,isDerived=                              
/******************************
* - Element -
*	
* Attr:			ownedComment                  (//Comment)                     ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			ownedElement                  (//Element)                     ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			owner                         (//Element)                     ,defaultValueLiteral=                              ,isDerived=true                          
/******************************
* - Relationship -
*	
* Attr:			relatedElement                (//Element)                     ,defaultValueLiteral=                              ,isDerived=true                          
/******************************
* - Element -
*	
* Attr:			ownedComment                  (//Comment)                     ,defaultValueLiteral=                              ,isDerived=                              
* Attr:			ownedElement                  (//Element)                     ,defaultValueLiteral=                              ,isDerived=true                          
* Attr:			owner                         (//Element)                     ,defaultValueLiteral=                              ,isDerived=true                          
						__elem1.isDerived:=false;	
									__elem1.isAbstract:=false;	
									__elem1.isFinalSpecialization:=false;	
									__elem1.isLeaf:=false;	
									__elem1.visibility:=uml::VisibilityKind::public;	
			
						__elem1.setStereotypeByQualifiedName('http::HttpGeneralBinding');
		
				__elem1.setTaggedValueByStereotypeQualifiedName('http::HttpGeneralBinding','inputSerialization','fvsdfvfdvs');
		__elem1.setTaggedValueByStereotypeQualifiedName('http::HttpGeneralBinding','outputSerialization','fvsdfvfdvvd');

						_QCJhMKGXEeqY2bYATC_WNg.setStereotypeByQualifiedName('database::JoinedTableInheritance');
		
		
		};

    
		getEstadoUsoTecnologiaEnumerationLiterals(model,null)->forEach(__elem1){
		getCategoriaUsoEnumerationLiterals(model,null)->forEach(__elem2){
						map UseCase('net.samsarasoftware.encuestas.stacks_Subsystem Specification_front_encuesta_Nuevo uso tecnologia '+__elem1.name+' '+__elem2.name+' dialog_0').name:='Nuevo uso tecnologia '+__elem1.name+' '+__elem2.name+' dialog';
						map UseCase('net.samsarasoftware.encuestas.stacks_Subsystem Specification_front_encuesta_Nuevo uso tecnologia '+__elem1.name+' '+__elem2.name+' dialog_0').name:='Nuevo uso tecnologia '+__elem1.name+' '+__elem2.name+' dialog';
							map UseCase('net.samsarasoftware.encuestas.stacks_Subsystem Specification_back_UsoTecnologia_'+('crearUsoTecnologia'+__elem1.name+__elem2.name)+'_0').name:=''+('crearUsoTecnologia'+__elem1.name+__elem2.name)+'';

		};
		};

		getEstadoUsoTecnologiaEnumerationLiterals(model,null)->forEach(__elem1){
		getCategoriaUsoEnumerationLiterals(model,null)->forEach(__elem2){
						map UseCase('net.samsarasoftware.encuestas.stacks_Subsystem Specification_front_encuesta_Nuevo uso tecnologia '+__elem1.name+' '+__elem2.name+'_0').name:='Nuevo uso tecnologia '+__elem1.name+' '+__elem2.name+'';
						map UseCase('net.samsarasoftware.encuestas.stacks_Subsystem Specification_front_encuesta_Nuevo uso tecnologia '+__elem1.name+' '+__elem2.name+'_0').name:='Nuevo uso tecnologia '+__elem1.name+' '+__elem2.name+'';
							map UseCase('net.samsarasoftware.encuestas.stacks_Subsystem Specification_back_UsoTecnologia_'+('consultarUsosTecnologias'+__elem1.name+__elem2.name)+'_0').name:=''+('consultarUsosTecnologias'+__elem1.name+__elem2.name)+'';
							map ExtensionPoint('net.samsarasoftware.encuestas.stacks_Subsystem Specification_back_UsoTecnologia_'+('consultarUsosTecnologias'+__elem1.name+__elem2.name)+'_ExtensionPoint1_6').name:='ExtensionPoint1';
							map UseCase('net.samsarasoftware.encuestas.stacks_Subsystem Specification_front_encuesta_Nuevo uso tecnologia '+__elem1.name+' '+__elem2.name+' dialog_0').name:='Nuevo uso tecnologia '+__elem1.name+' '+__elem2.name+' dialog';

		};
		};

		getEstadoUsoTecnologiaEnumerationLiterals(model,null)->forEach(__elem1){
		getCategoriaUsoEnumerationLiterals(model,null)->forEach(__elem2){
						map Include('net.samsarasoftware.encuestas.stacks_Subsystem Specification_front_encuesta_includeTemplate '+__elem1.name+__elem2.name+'_0').name:='includeTemplate '+__elem1.name+__elem2.name+'';
						map Include('net.samsarasoftware.encuestas.stacks_Subsystem Specification_front_encuesta_includeTemplate '+__elem1.name+__elem2.name+'_0').name:='includeTemplate '+__elem1.name+__elem2.name+'';
						map UseCase('net.samsarasoftware.encuestas.stacks_Subsystem Specification_back_UsoTecnologia_'+('consultarUsosTecnologias'+__elem1.name+__elem2.name)+'_0').name:=''+('consultarUsosTecnologias'+__elem1.name+__elem2.name)+'';

		};
		};

		getEstadoUsoTecnologiaEnumerationLiterals(model,null)->forEach(__elem1){
		getCategoriaUsoEnumerationLiterals(model,null)->forEach(__elem2){
						map UseCase('net.samsarasoftware.encuestas.stacks_Subsystem Specification_back_UsoTecnologia_'+('consultarUsosTecnologias'+__elem1.name+__elem2.name)+'_0').name:=''+('consultarUsosTecnologias'+__elem1.name+__elem2.name)+'';
						map UseCase('net.samsarasoftware.encuestas.stacks_Subsystem Specification_back_UsoTecnologia_'+('consultarUsosTecnologias'+__elem1.name+__elem2.name)+'_0').name:=''+('consultarUsosTecnologias'+__elem1.name+__elem2.name)+'';
							map ExtensionPoint('net.samsarasoftware.encuestas.stacks_Subsystem Specification_back_UsoTecnologia_'+('consultarUsosTecnologias'+__elem1.name+__elem2.name)+'_ExtensionPoint1_6').name:='ExtensionPoint1';
							map ExtensionPoint('net.samsarasoftware.encuestas.stacks_Subsystem Specification_back_UsoTecnologia_'+('consultarUsosTecnologias'+__elem1.name+__elem2.name)+'_ExtensionPoint1_6').name:='ExtensionPoint1';
							map UseCase('net.samsarasoftware.encuestas.stacks_Subsystem Specification_front_encuesta_Nuevo uso tecnologia '+__elem1.name+' '+__elem2.name+' dialog_0').name:='Nuevo uso tecnologia '+__elem1.name+' '+__elem2.name+' dialog';

		};
		};

		getEstadoUsoTecnologiaEnumerationLiterals(model,null)->forEach(__elem1){
		getCategoriaUsoEnumerationLiterals(model,null)->forEach(__elem2){
						map UseCase('net.samsarasoftware.encuestas.stacks_Subsystem Specification_back_UsoTecnologia_'+('crearUsoTecnologia'+__elem1.name+__elem2.name)+'_0').name:=''+('crearUsoTecnologia'+__elem1.name+__elem2.name)+'';
						map UseCase('net.samsarasoftware.encuestas.stacks_Subsystem Specification_back_UsoTecnologia_'+('crearUsoTecnologia'+__elem1.name+__elem2.name)+'_0').name:=''+('crearUsoTecnologia'+__elem1.name+__elem2.name)+'';
							map UseCase('net.samsarasoftware.encuestas.stacks_Subsystem Specification_front_encuesta_Nuevo uso tecnologia '+__elem1.name+' '+__elem2.name+' dialog_0').name:='Nuevo uso tecnologia '+__elem1.name+' '+__elem2.name+' dialog';
							map UseCase('net.samsarasoftware.encuestas.stacks_Subsystem Specification_back_UsoTecnologia_'+('consultarUsosTecnologias'+__elem1.name+__elem2.name)+'_0').name:=''+('consultarUsosTecnologias'+__elem1.name+__elem2.name)+'';

		};
		};

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
  
}
